// This is our global style for our tampermonkey script
// It overrides the Xenforo default theme colors
// and may contain some other styles for our script UI

@use 'sass:color';
@use 'sass:map';

// Import pink theme tokens and maps
@use './themes/pink' as pink-theme;

// Import button-blue theme tokens and maps
@use './themes/button-blue' as button-blue-theme;

// Helper function to extract HSL channels from a color
@function get-hsl-channels($color) {
  @return (
    h: color.channel($color, 'hue', $space: hsl),
    s: color.channel($color, 'saturation', $space: hsl),
    l: color.channel($color, 'lightness', $space: hsl),
    a: color.alpha($color)
  );
}

// Mixin to output CSS variables for a theme
@mixin theme-vars($theme) {
  $chrome-bg: get-hsl-channels(map.get($theme, chromeBg));
  --xf-chromeBg--h: #{map.get($chrome-bg, h)};
  --xf-chromeBg--s: #{map.get($chrome-bg, s)};
  --xf-chromeBg--l: #{map.get($chrome-bg, l)};
  --xf-chromeBg--a: #{map.get($chrome-bg, a)};

  $chrome-text: get-hsl-channels(map.get($theme, chromeText));
  --xf-chromeTextColor--h: #{map.get($chrome-text, h)};
  --xf-chromeTextColor--s: #{map.get($chrome-text, s)};
  --xf-chromeTextColor--l: #{map.get($chrome-text, l)};
  --xf-chromeTextColor--a: #{map.get($chrome-text, a)};

  $text: get-hsl-channels(map.get($theme, text));
  --xf-textColor--h: #{map.get($text, h)};
  --xf-textColor--s: #{map.get($text, s)};
  --xf-textColor--l: #{map.get($text, l)};
  --xf-textColor--a: #{map.get($text, a)};

  $link: get-hsl-channels(map.get($theme, link));
  --xf-linkColor--h: #{map.get($link, h)};
  --xf-linkColor--s: #{map.get($link, s)};
  --xf-linkColor--l: #{map.get($link, l)};
  --xf-linkColor--a: #{map.get($link, a)};

  $link-hover: get-hsl-channels(map.get($theme, linkHover));
  --xf-linkHoverColor--h: #{map.get($link-hover, h)};
  --xf-linkHoverColor--s: #{map.get($link-hover, s)};
  --xf-linkHoverColor--l: #{map.get($link-hover, l)};
  --xf-linkHoverColor--a: #{map.get($link-hover, a)};

  $page-bg: get-hsl-channels(map.get($theme, pageBg));
  --xf-pageBg--h: #{map.get($page-bg, h)};
  --xf-pageBg--s: #{map.get($page-bg, s)};
  --xf-pageBg--l: #{map.get($page-bg, l)};
  --xf-pageBg--a: #{map.get($page-bg, a)};
}

:root {
  @include theme-vars(pink-theme.$light); // Default theme
}

html[data-theme='pink-dark'] {
  @include theme-vars(pink-theme.$dark);
}

html[data-theme='pink-light'] {
  @include theme-vars(pink-theme.$light);
}

html[data-theme='button-blue-dark'] {
  @include theme-vars(button-blue-theme.$dark);
}

html[data-theme='button-blue-light'] {
  @include theme-vars(button-blue-theme.$light);
}
